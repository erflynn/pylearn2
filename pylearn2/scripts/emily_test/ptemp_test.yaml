!obj:pylearn2.train.Train {
    dataset: &train !obj:pylearn2.datasets.mnist.MNIST {
        which_set: 'train',
        one_hot: 1,
        start: 0,
        stop: 5000
    },
    model: !obj:pylearn2.models.mlp.MLP {
        layers: [ !obj:pylearn2.models.mlp.Sigmoid {
                     layer_name: 'h0',
                     dim: 500,
                     irange: 0.05
                 }, !obj:pylearn2.models.mlp.Softmax {
                     layer_name: 'y',
                     n_classes: 10,
                     irange: 0.05
                 }
                ],
        nvis: 784,
    },
    algorithm: !obj:pylearn2.training_algorithms.ptemp.PTemp {
        batch_size: 5000,
        learning_rate: .01,
        num_steps: 5,
        k: 1,
        stdev: 0.09,
        output_file: 'ptemp_log.txt',
        temp_list: [0.01, 0.1, 0.2, 0.4, 0.5],
        monitoring_dataset:
            {
                'train' : *train,
                'valid' : !obj:pylearn2.datasets.mnist.MNIST {
                              which_set: 'train',
                              one_hot: 1,
                              start: 50000,
                              stop: 60000
                          },
                'test'  : !obj:pylearn2.datasets.mnist.MNIST {
                              which_set: 'test',
                              one_hot: 1,
                          }
            },
        termination_criterion: !obj:pylearn2.termination_criteria.And {
            criteria: [
                !obj:pylearn2.termination_criteria.MonitorBased {
                    channel_name: "valid_y_misclass",
                    prop_decrease: 0.,
                    N: 10000
                },
                !obj:pylearn2.termination_criteria.EpochCounter {
                    max_epochs: 10
                }
            ]
        }
    },
    extensions: [ !obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {
             channel_name: 'valid_y_misclass',
             save_path: "ptemp_test.pkl"
        }
    ]
}
